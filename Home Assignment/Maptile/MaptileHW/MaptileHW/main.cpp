/*
	@author	Heedong Lee (arkinylee@gmail.com)
	@date	07012014
	@git	https://github.com/arkiny/SGA-Learning-Heedong

	과제]
	기본] 타일 위치(좌표) 설정 : __ , __
	확장] 타일위치 2개 ...
	입력한 한곳에 대해서 타일을 바꾼 후 출력
	더 할수 있을 경우 좌표입력 2개 이상 받아보기
*/

//////////////////////////////////////////////////////////////////////////////////////////
// 코드 개요																				//
// 타일 좌표(x, y)를 유저에게 받아와서 해당 좌표의 타일만 다른 색으로 표기					//
//////////////////////////////////////////////////////////////////////////////////////////
// 프로그램 기획 단계																		//
// Design Stage																			//
//																						//
// 현재 우리가 가진 것																	//
// What do we have?																		//
// 우리는 타일맵을 그릴 수 있는 간단한 코드를 가지고 있습니다.								//
// We have simple code for drawing tilemap.												//
//																						//
// 우리가 해야할 것																		//
// What will we do?																		//
// 우리는 이 코드에 scanf 및 조건 연산을 삽입하여, 원하는 좌표의 타일 색을 변환시켜 출력		//
// 해야 합니다.																			//
// We will change the color of the tilemap which location is entered using scanf,		//
// and condition operator																//
//																						//
// 추가해야 할 것																		//
// what will we add																		//
// 1. 사용자로부터 받아온 좌표를 저장하기 위한 변수, x축, y축 총 두개가 필요				//
// 2. 추가할 조건 연산자																	//
// 조건 연산자는 반복문이 돌아갈 때에 값을 비교, 두 변수가 반복문의 좌표와 같은 값이 나왔을	//
// 경우에 다른 색의 타일을 출력한다.														//
//////////////////////////////////////////////////////////////////////////////////////////
// 귀찮아서 영어 주석은 생략 ㅡㅡ															//
//////////////////////////////////////////////////////////////////////////////////////////

// 참조 : 습관상 (0, 0)을 기본 축으로 한 프로그램입니다.
// 가장 좌측 위의 좌표가 (0, 0) 에서 시작됩니다.

#include<stdio.h>	
#include<stdlib.h> // 화면 정리와 화면 정지를 위한 라이브러리

int main(){
	// 이름 표기
	printf("Heedong Lee\n");
	printf("SGA 51A\n");
	printf("tileMap Home Assignment\n\n");

	// 참조용 좌표표 입니다. 위 주석에서 말했다시피 (0,0)에서 시작되는 좌표입니다.
	printf("참조용 좌표표 입니다.\n");

	// 변수 i와 변수 j가 무엇을 나타내는 지 확인하기 위한 테스트용 코드입니다.
	// 수업시간에 배웠던 코드와 크게 다르지 않습니다.
	// 세로 그리기
	for (int i = 0; i <= 8; i++){
		// 가로 그리기
		for (int j = 0; j <= 9; j++){
			printf("|(%d, %d) ", i, j); // 열, i좌표와 j좌표를 출력합니다.
		} //end inner for
		printf("\n"); // 개행
	} // end outer for
	system("pause");	// 화면 정지
	system("cls");		// 화면 정리

	// 위의 코드에서 우리는 변수 i와 j가 각각 세로좌표(vertical)와 가로좌표(horizontal)를 가리키는 
	// 것을 알수 있습니다.
	
	// 이제 scanf를 통해 사용자가 원하는 좌표를 받아오도록 하겠습니다.

	// 변수 초기화
	int input_ver = -1, input_hor = -1; // 사용자의 x와 y좌표를 받아오기 위한 변수
	
	// 데이터 입력 부분
	printf("하나의 값을 입력 받아 해당 타일만 변경하기\n\n");
	printf("바꾸고 싶은 좌표를 입력하세요. ( 0 , 0 )부터 시작 --> ( 세로 , 가로 )\n");
	printf("세로 축 = \n");
	scanf("%d", &input_ver);
	printf("가로 축 = \n");
	scanf("%d", &input_hor);

	// 세로 그리기
	for (int i = 0; i <= 8; i++){
		// 가로 그리기
		for (int j = 0; j <= 9; j++){
			//////////////////////////////////////////////////////////////////////////////////
			// 변경 추가된 부분																//
			// 조건 연산자가 추가되었습니다.													//
			// 저희가 연산자 시간에 배웠던 조건 연산자,										//
			// ( 조건 ) ? (참일때 실행) : (거짓일때 실행)										//
			// 을 이용하여,																	//
			// 반복문의 세로좌표 i와 유저가 입력한 세로 좌표 input_ver가 같고					//
			// ( i == input_ver )															//
			// 또한 반복문의 가로좌표 j와, 유저가 입력한 가로 좌표 input_hor이 같을 시에		//
			// ( j == input_hor )															//
			// 둘다 참일 경우 (두 좌표가 둘다 맞아야 하므로 &&을 이용합니다.)					//
			// ( i == input_ver && j == input_hor)											//
			// 빈 네모를 출력 (다른색)														//
			// ( i == input_ver && j == input_hor) ? printf("□")							//
			// 한쪽이라도 다를 경우에 차있는 네모를 출력										//
			// ( i == input_ver && j == input_hor) ? printf("□") : printf("■")				//
			// 울 하는 구문을 넣었습니다.														//
			//////////////////////////////////////////////////////////////////////////////////
			(i == input_ver && j == input_hor) ? printf("□") : printf("■");
		} // end inner for
		printf("\n"); // 개행
	} // end outer for

	system("pause");	// 화면 정지
	system("cls");		// 화면 정리

	// 여기까지 무리없이 (모르는 점이 없이) 오셨다면, 두개의 좌표값을 받아서 출력하는 것도 어렵지
	// 않습니다.

	// 변수 초기화
	int input_ver1 = -1, input_hor1 = -1; // 사용자의 x와 y좌표를 받아오기 위한 변수
	int input_ver2 = -1, input_hor2 = -1; // 사용자의 x와 y좌표를 받아오기 위한 변수

	// 데이터 입력 부분
	printf("두개의 값을 입력 받아 해당 타일만 변경하기\n\n");
	printf("바꾸고 싶은 좌표를 2개 입력하세요. ( 0 , 0 )부터 시작 --> ( 세로 , 가로 )\n");
	printf("세로 축1 = \n");
	scanf("%d", &input_ver1);
	printf("가로 축1 = \n");
	scanf("%d", &input_hor1);
	printf("세로 축2 = \n");
	scanf("%d", &input_ver2);
	printf("가로 축2 = \n");
	scanf("%d", &input_hor2);


	// 세로 그리기
	for (int i = 0; i <= 8; i++){
		// 가로 그리기
		for (int j = 0; j <= 9; j++){
			//////////////////////////////////////////////////////////////////////////////////
			// 변경 추가된 부분																//
			// 조건 연산자가 변경되었습니다.													//
			// 위 문제의 조건 연산자,															//
			// (i == input_ver && j == input_hor) ? printf("□") : printf("■");				//
			// 와 비교할 경우 다른 점이 확연하게 느껴지실 것입니다.								//
			// 여기서는 or 연산자인 || 연산자를 이용해											//
			// 반복문의 세로좌표 i가 입력된 좌표인 input_ver1과 같고 (and 연산자 &&)			//
			// 반복문의 가로좌표 j가 입력된 좌표인 input_hor1과 같거나							//
			// (i == input_ver1 && j == input_hor1)											//
			// 혹은, (or연산자 ||)															//
			// 반복문의 세로좌표 i가 입력된 좌표인 input_ver2과 같고 (and 연산자 &&)			//
			// 반복문의 가로좌표 j가 입력된 좌표인 input_hor2과 같을때							//
			// (i == input_ver2 && j == input_hor2)											//
			// 다른 색의 타일을 출력하는 조건 연산자로 변경하였습니다.							//
			//////////////////////////////////////////////////////////////////////////////////
			(i == input_ver1 && j == input_hor1) || (i == input_ver2 && j == input_hor2) 
				? printf("□") : printf("■");
		} // end inner for
		printf("\n"); // 개행
	} // end outer for

	system("pause");	// 화면 정지
}

// 여담으로 주석에 집착하는 이유는 간단합니다.
// 학부생활중 모든 수업시간에 내는 과제들이 모두, 주석 역시 채점범위(보통 15프로이상)에 들어갔기 때문입니다.
// ㅡ,.ㅡ;